<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neusoft.dao.QuestionMapper" >
  <resultMap id="BaseResultMap" type="com.neusoft.entity.Question" >
    <id column="question_id" property="questionId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    a.question_id as questionId,
    a.user_id as userId,
    a.title as title,
    LEFT ( a.detail,30)as detail,
    a.create_time as createTime
  </sql>
  <select id="selectByPrimaryKey" resultType="com.neusoft.entity.Question" >
    select 
    a.question_id as questionId,
    a.user_id as userId,
    a.title as title,
    a.detail as detail,
    b.sex as sex,
    b.username as username,
    a.create_time as createTime
    from question a
    LEFT JOIN  user b
    on a.user_id = b.user_id
    where a.question_id = #{questionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from question
    where question_id = #{questionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.neusoft.entity.Question" >
    insert into question (question_id, user_id, title, 
      detail, create_time,question_genre)
    values (#{questionId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},#{questionGenre})
  </insert>
  <insert id="insertSelective" parameterType="com.neusoft.entity.Question" >
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.entity.Question" >
    update question
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neusoft.entity.Question" >
    update question
    set user_id = #{userId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where question_id = #{questionId,jdbcType=VARCHAR}
  </update>
  <select id="selectAllQuestion" resultType="com.neusoft.entity.Question">
    SELECT
    b.sex as sex,
    b.username as username,
    c.question_genre_name as questionGenre,
    <include refid="Base_Column_List"/>
    from question a
    LEFT JOIN  user b
    on a.user_id = b.user_id
    LEFT join healthy_question_genre c
    on a.question_genre=c.question_genre_code
    order by a.create_time desc
  </select>
  <select id="selectAllQuestionByGenre" resultType="com.neusoft.entity.Question">
    SELECT
    b.sex as sex,
    b.username as username,
    <include refid="Base_Column_List"/>
    from question a
    LEFT JOIN  user b
    on a.user_id = b.user_id
    where a.question_genre = #{genre} order by a.create_time desc
  </select>
  <select id="selectQuestionByTitle" resultType="com.neusoft.entity.Question">
    SELECT
    <include refid="Base_Column_List"/>
    from question a where a.title LIKE  CONCAT(CONCAT('%',#{title}), '%') order by a.create_time desc
  </select>
  <select id="selectQuestionByUserId" resultType="com.neusoft.entity.Question">
    SELECT
    <include refid="Base_Column_List"/>
    from question a where a.user_id=#{userId}order by a.create_time desc
  </select>
  <select id="selectAnswerQuestionByQuestionId" resultType="com.neusoft.entity.AnswerQuestion">
    SELECT
    a.answer_detail as answerDetail,
    a.create_time as createTime,
    b.username as doctorName,
    b.pic as doctorHeadPhoto,
    d.username as userName,
    d.pic as userHeadPhoto
    from answer_question a
    LEFT  JOIN  doctor b
    on b.doctor_id = a.doctor_id
    LEFT  JOIN question c
    on c.question_id=a.question_id
    LEFT JOIN  user d
    on c.user_id = d.user_id
    where a.question_id=#{questionId} order by a.create_time desc
  </select>
  <insert id="collectionQuestionById" parameterType="com.neusoft.entity.CollectionQuestion">
    insert into collection_question (collection_question_id, user_id, question_id,
      create_time)
    values (#{collectionQuestionId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{questionId,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <delete id="deleteCollectionQuestion">
    delete from collection_question
    where collection_question_id = #{collectionQuestionId,jdbcType=VARCHAR}
  </delete>
  <select id="selectMyCollectionQuestion" resultType="com.neusoft.entity.Question">
    select
     <include refid="Base_Column_List"/>
    FROM question a
    left JOIN collection_question  b
    on a.question_id=b.question_id
    where b.user_id=#{userId} order by b.create_time desc
  </select>
  <select id="selectCollectionQuestionIdByUserId" resultType="java.lang.String">
    select
    a.collection_question_id
    from collection_question a WHERE a.user_id=#{userId} and a.question_id=#{questionId}
  </select>
  <select id="selectAllAnswerQuestion" resultType="com.neusoft.entity.AnswerQuestion">
      SELECT
      a.answer_detail as answerDetail,
      a.create_time as answerTime,
      b.username as doctorName,
      b.pic as doctorHeadPhoto,
      d.username as userName,
      d.pic as userHeadPhoto,
      c.create_time as createTime,
      b.email as doctorEmail,
      c.title as title,
      d.sex as sex,
      a.question_id as questionId,
      a.answer_id as answerId
      from answer_question a
      LEFT  JOIN  doctor b
      on b.doctor_id = a.doctor_id
      LEFT  JOIN question c
      on c.question_id=a.question_id
      LEFT JOIN  user d
      on c.user_id = d.user_id
      order by a.create_time desc
  </select>
  <delete id="deleteQuestionAnswerById">
    DELETE
    FROM  answer_question WHERE answer_id=#{answerId}
  </delete>
  <select id="selectMyAnswerQuestion" resultType="com.neusoft.entity.AnswerQuestion">
    SELECT
      a.answer_detail as answerDetail,
      a.create_time as answerTime,
      d.username as userName,
      d.pic as userHeadPhoto,
      c.create_time as createTime,
      c.title as title,
      d.sex as sex,
      a.question_id as questionId,
      a.answer_id as answerId
      from answer_question a
      LEFT  JOIN  doctor b
      on b.doctor_id = a.doctor_id
      LEFT  JOIN question c
      on c.question_id=a.question_id
      LEFT JOIN  user d
      on c.user_id = d.user_id
      where a.doctor_id=#{doctorId} order by a.create_time desc
  </select>
</mapper>